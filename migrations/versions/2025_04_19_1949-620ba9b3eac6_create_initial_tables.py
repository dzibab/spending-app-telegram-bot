"""Create initial tables

Revision ID: 620ba9b3eac6
Revises:
Create Date: 2025-04-19 19:49:23.831294

"""

from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "620ba9b3eac6"
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("categories", schema=None) as batch_op:
        batch_op.alter_column(
            "category_name", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False
        )

    with op.batch_alter_table("currencies", schema=None) as batch_op:
        batch_op.alter_column(
            "currency_code", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False
        )

    with op.batch_alter_table("main_currency", schema=None) as batch_op:
        batch_op.alter_column(
            "user_id", existing_type=sa.INTEGER(), nullable=False, autoincrement=True
        )
        batch_op.alter_column(
            "currency_code", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False
        )

    with op.batch_alter_table("spendings", schema=None) as batch_op:
        batch_op.alter_column("id", existing_type=sa.INTEGER(), nullable=False, autoincrement=True)
        batch_op.alter_column(
            "description", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=True
        )
        batch_op.alter_column(
            "amount", existing_type=sa.REAL(), type_=sa.Float(), existing_nullable=False
        )
        batch_op.alter_column(
            "currency", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False
        )
        batch_op.alter_column(
            "category", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False
        )
        batch_op.alter_column(
            "date", existing_type=sa.TEXT(), type_=sa.String(), existing_nullable=False
        )
        # Removing index drops since these already exist in the database
        # batch_op.drop_index('idx_spendings_amount')
        # batch_op.drop_index('idx_spendings_description')
        # batch_op.drop_index('idx_spendings_user_category')
        # batch_op.drop_index('idx_spendings_user_currency')
        # batch_op.drop_index('idx_spendings_user_date')
        # batch_op.drop_index('idx_spendings_user_date_id')
        # batch_op.drop_index('idx_spendings_user_desc')
        # Removing unnamed foreign key constraint operations
        # batch_op.drop_constraint(None, type_='foreignkey')
        # batch_op.drop_constraint(None, type_='foreignkey')

    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table("spendings", schema=None) as batch_op:
        # Removing unnamed foreign key constraint operations
        # batch_op.create_foreign_key(None, 'categories', ['user_id', 'category'], ['user_id', 'category_name'])
        # batch_op.create_foreign_key(None, 'currencies', ['user_id', 'currency'], ['user_id', 'currency_code'])
        # Removing index creation since these already exist in the database
        # batch_op.create_index('idx_spendings_user_desc', ['user_id', 'description'], unique=False)
        # batch_op.create_index('idx_spendings_user_date_id', ['user_id', 'date', 'id'], unique=False)
        # batch_op.create_index('idx_spendings_user_date', ['user_id', 'date'], unique=False)
        # batch_op.create_index('idx_spendings_user_currency', ['user_id', 'currency'], unique=False)
        # batch_op.create_index('idx_spendings_user_category', ['user_id', 'category'], unique=False)
        # batch_op.create_index('idx_spendings_description', ['description'], unique=False)
        # batch_op.create_index('idx_spendings_amount', ['amount'], unique=False)
        batch_op.alter_column(
            "date", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False
        )
        batch_op.alter_column(
            "category", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False
        )
        batch_op.alter_column(
            "currency", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False
        )
        batch_op.alter_column(
            "amount", existing_type=sa.Float(), type_=sa.REAL(), existing_nullable=False
        )
        batch_op.alter_column(
            "description", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=True
        )
        batch_op.alter_column("id", existing_type=sa.INTEGER(), nullable=True, autoincrement=True)

    with op.batch_alter_table("main_currency", schema=None) as batch_op:
        batch_op.alter_column(
            "currency_code", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False
        )
        batch_op.alter_column(
            "user_id", existing_type=sa.INTEGER(), nullable=True, autoincrement=True
        )

    with op.batch_alter_table("currencies", schema=None) as batch_op:
        batch_op.alter_column(
            "currency_code", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False
        )

    with op.batch_alter_table("categories", schema=None) as batch_op:
        batch_op.alter_column(
            "category_name", existing_type=sa.String(), type_=sa.TEXT(), existing_nullable=False
        )

    # ### end Alembic commands ###
